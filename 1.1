import telebot
from telebot import types
from symptoms import sore_throat, specialists_dict

bot = telebot.TeleBot('6953770870:AAGRSQccl2ATuRs8qyhmopUD7n6zY8-Pe7g')
result = []


def scoring():  # ф-я для начисления очков за ф-ии - симптомы
    for specialist, score in sorted(specialists_dict.items(), key=lambda x: x[1], reverse=True):
        result.append(specialist)
    return result


def standart_InlineKeyboard_Markup(message, symptoms_dict):
    markup = types.InlineKeyboardMarkup()
    counter_elem = 0
    row_elem = []
    for k, v in symptoms_dict.items():
        k = types.InlineKeyboardButton(str(v), callback_data=str(v))
        counter_elem += 1
        row_elem.append(k)
        if counter_elem % 2 == 0:
            markup.row(*row_elem)
            row_elem.clear()
    bot.send_message(message.chat.id, 'Уточните симптоматику', reply_markup=markup)


@bot.message_handler(commands=['start'])
def start_survey(message):
    standart_InlineKeyboard_Markup(message=message, symptoms_dict=primary_survey)


@bot.callback_query_handler(func=lambda call: call.data == 'pain')
def pain(call):
    message = call.message
    markup = types.InlineKeyboardMarkup()
    s_abdominal_pain = types.InlineKeyboardButton('Боль в животе', callback_data='abdominal_pain')
    s_chest_pain = types.InlineKeyboardButton('Боль в груди', callback_data='chest_pain')
    markup.row(s_abdominal_pain, s_chest_pain)
    s_headache = types.InlineKeyboardButton('Головная боль', callback_data='headache')
    s_limb_pain = types.InlineKeyboardButton('Боль в конечностях', callback_data='limb_pain')
    markup.row(s_limb_pain, s_headache)
    bot.send_message(message.chat.id, 'Уточните симптоматику', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'abdominal_pain')
def abdominal_pain(call):
    message = call.message
    markup = types.InlineKeyboardMarkup()
    s_left_hypochondrium = types.InlineKeyboardButton('Слева под ребром', callback_data='left_hypochondrium')
    s_right_hypochondrium = types.InlineKeyboardButton('Справа под ребром', callback_data='right_hypochondrium')
    markup.row(s_left_hypochondrium, s_right_hypochondrium)
    s_upper_abdominal = types.InlineKeyboardButton('В верху живота', callback_data='upper_abdominal')
    s_periumbilical = types.InlineKeyboardButton('Посередине живота', callback_data='periumbilical')
    markup.row(s_upper_abdominal, s_periumbilical)
    s_left_flank = types.InlineKeyboardButton('Слева в боку', callback_data='left_flank')
    s_right_flank = types.InlineKeyboardButton('Справа в боку', callback_data='right_flank')
    markup.row(s_left_flank, s_right_flank)
    s_low_abdominal_pain = types.InlineKeyboardButton('В низу живота', callback_data='low_abdominal_pain')
    markup.row(s_low_abdominal_pain)
    bot.send_message(message.chat.id, 'Уточните локализацию', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'left_hypochondrium' or call.data == 'right_hypochondrium')
def hypochondrium_pain(call):
    specialists_dict['gastroenterologist'] += 1
    specialists_dict['surgeon'] += 1
    scoring()
    markup = types.InlineKeyboardMarkup()
    yes = types.InlineKeyboardButton('Да', callback_data='yes')
    no = types.InlineKeyboardButton('Нет', callback_data='no')
    markup.row(yes, no)

    bot.send_message(call.message.chat.id, 'У вас есть другие жалобы?', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'no')
def do_final_score(call):
    bot.send_message(call.message.chat.id, f'Вам стоит посетить {result[0]}, также, возможно, {result[1]}')
@bot.callback_query_handler(func=lambda call: call.data == 'yes')
def do_final_score(call):
    bot.send_message(call.message.chat.id, f'Вам стоит посетить {result[0]}, также, возможно, {result[1]}')
bot.polling(none_stop=True)
