import telebot
from numpy import array_split
from telebot import types

specialists_dict = dict.fromkeys(
    ['Гинеколога', 'Аллерголога', 'Гастроэнтеролога', 'Дерматолога', 'Кардиолога', 'Невролога',
     'Офтальмолога', 'Травматолога', 'Отоларинголога', 'Проктолога', 'Стоматолога', 'Терапевта', 'Уролога',
     'Хирурга', 'Эндокринолога'], 0)
bot = telebot.TeleBot('6953770870:AAGRSQccl2ATuRs8qyhmopUD7n6zY8-Pe7g')
result = []


def scoring():
    for specialist, score in sorted(specialists_dict.items(), key=lambda x: x[1], reverse=True):
        result.append(specialist)
    return result


primary_survey = {'Боль': 'pain', 'Изменение цвета выделений из половых органов'
: 'female_discharge_alteration', 'Насморк': 'rheum', 'Контактная сыпь': 'contact rush'
                  }

pain_survey = {'Боль в животе': 'abdominal_pain', 'Боль в груди': 'chest_pain', 'Головная боль': 'headache',
               'Боль в конечностях': 'limb_pain'}

abdominal_pain_survey = {'Слева под ребром': 'left_hypochondrium', 'Справа под ребром': 'right_hypochondrium',
                         'В верху живота': 'upper_abdominal', 'Посередине живота': 'periumbilical',
                         'Слева в боку': 'left_flank', 'Справа в боку': 'right_flank',
                         'Боль в низу живота': 'lower_abdominal_pain'}




def standart_InlineKeyboard_Markup(symptoms_dict):
    global markup
    markup = types.InlineKeyboardMarkup()
    row_elem = []
    for k, v in symptoms_dict.items():
        k = types.InlineKeyboardButton(str(k), callback_data=str(v))

        row_elem.append(k)
        split_row_elem = array_split(row_elem, len(row_elem) // 2 + (len(row_elem) % 2 != 0))
    for sublist in split_row_elem:
        markup.add(*sublist)



@bot.message_handler(commands=['start'])
def start_survey(message):
    standart_InlineKeyboard_Markup(primary_survey)
    bot.send_message(message.chat.id, 'Уточните симптоматику', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'pain')
def pain(call):
    standart_InlineKeyboard_Markup(pain_survey)
    bot.send_message(call.from_user.id, 'Уточните симптоматику', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'abdominal_pain')
def abdominal_pain(call):
    standart_InlineKeyboard_Markup(abdominal_pain_survey)
    bot.send_message(call.from_user.id, 'Уточните локализацию', reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data == 'left_hypochondrium')
def hypochondrium_pain(call):
    chosen_symptom = [key for key in abdominal_pain_survey if abdominal_pain_survey[key] == call.data][0]
    del abdominal_pain_survey[chosen_symptom]
    
    specialists_dict['Гастроэнтеролога'] += 1
    specialists_dict['Хирурга'] += 1
    scoring()
    markup = types.InlineKeyboardMarkup()
    yes = types.InlineKeyboardButton('Да', callback_data='yes')
    no = types.InlineKeyboardButton('Нет', callback_data='no')
    markup.row(yes, no)

    bot.send_message(call.message.chat.id, 'У вас есть другие жалобы?', reply_markup=markup)



@bot.callback_query_handler(func=lambda call: call.data == 'no')
def do_final_score(call):
    bot.send_message(call.message.chat.id, f'Вам стоит посетить {result[0]}, также, возможно, {result[1]}')


@bot.callback_query_handler(func=lambda call: call.data == 'yes')
def go_back_to_start_survey(call):
    standart_InlineKeyboard_Markup(primary_survey)
    bot.send_message(call.from_user.id, 'Уточните симптоматику', reply_markup=markup)


bot.polling(none_stop=True)
